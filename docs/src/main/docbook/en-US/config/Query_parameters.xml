<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<section id="config.queryparams">
	<title>Manage Query-parameters in mapped URLs</title>
	<para>
		Most people are already familiar with URL query-parameters. They come in <literal>key=value</literal>
		pairs, and begin where the '?' character is found in a URL. For example:
		
		<programlisting>http://example.com/path?query=data</programlisting>
		
		Here, 'query' is the name of the parameter, and 'data' is the value of the parameter; order of parameters
		does not matter, and if duplicates parameter names are encountered, an array of multiple values will be stored
		for that parameter.
	</para>	
		
	<para>
		While query-parameters are automatically stored in the <literal>HttpServletRequest</literal> parameter map,
		it may sometimes be convenient to also inject those values directly into JSF managed beans.
			
      	<programlisting><![CDATA[<query-param name="language"> #{bean.language} </query-param>]]></programlisting>
			
		In this case, we must have a managed bean defined in our application; these beans can be 
		registered either in JSF, Spring, Google Guice, or as shown here using CDI/Weld. Based on the
		configuration in this particular example, the bean must be named "bean", and must have
		an accessible field named "language". 
			
      	<programlisting><![CDATA[<url-mapping id="store"> 
   <pattern value="/store/" /> 
   <view-id value="/faces/shop/store.jsf" />
   <query-param name="language"> #{bean.language} </query-param>
</url-mapping>]]></programlisting>
	
	</para>
	<para>
		Any value matched by the query-parameter will be injected directly into the bean.

<programlisting>@Named("bean")
@RequestScoped
public class LanguageBean {
	private String language;
	
	/* Getters + Setters */
}</programlisting>
	</para>
	<tip>
		<para>
			By default, query-parameters are URL-decoded. If this is not desired, URL-decoding may be
			disabled using the optional <code>decode="false"</code> attribute:
			
      	<programlisting><![CDATA[<query-param name="language" decode="false"> #{bean.language} </query-param>]]></programlisting>
		</para>
	</tip>
	<para>
		In some situations you might want that PrettyFaces doesn't inject the value of a query parameter
		on JSF postbacks. A typical usecase for this would be a query parameter that is used to initially
		populate a bean property holding the value bound to an input component. In this case you will want the 
		query parameter value to be injected only on the initial GET request but not on postbacks, 
		because the postback will contain the submitted value of the input component.       
	</para>
	<para>
		You can use the <code>onPostback</code> attribute to tell PrettyFaces whether you want the query 
		parameter to be injected on postbacks. Please note that the default value of the attribute
		is <code>true</code>.
	</para>
	<programlisting><![CDATA[<query-param name="query" onPostback="false">#{searchBean.query}</query-param>]]></programlisting>
</section>
